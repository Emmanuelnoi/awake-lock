name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type to bump'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'pnpm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run tests
      run: pnpm test
      
    - name: Run linting
      run: pnpm run lint
      
    - name: Check code formatting
      run: pnpm run format:check
      
    - name: Run type checking
      run: pnpm run typecheck
      
    - name: Build project
      run: pnpm run build
      
    - name: Bump version (manual trigger)
      id: bump_version_step
      if: github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        git add package.json
        git commit -m "chore: bump version to v$NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push origin main --tags
        
    - name: Publish to NPM
      run: pnpm publish --no-git-checks
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.bump_version_step.outputs.new_version }}
        release_name: Release v${{ steps.bump_version_step.outputs.new_version }}
        body: |
          ## Changes
          
          See [CHANGELOG.md](./CHANGELOG.md) for details.
          
          ## Installation
          
          ```bash
          npm install awake-lock
          # or
          pnpm add awake-lock
          # or  
          yarn add awake-lock
          ```
        draft: false
        prerelease: false